name: AutomationScout Security Scan

on:
  schedule:
    - cron: '0 2 * * 1'  # Weekly on Monday at 2 AM
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'package.json'
      - 'pnpm-lock.yaml'
      - 'apps/**/package.json'

jobs:
  security-scan:
    name: Security Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: '8.x'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run npm audit
        run: |
          echo "🔍 Running npm security audit..."
          pnpm audit --audit-level moderate
        continue-on-error: true

      - name: Run CodeQL Analysis
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      - name: Check for sensitive files
        run: |
          echo "🔍 Checking for sensitive files..."
          
          # Check for common sensitive files
          SENSITIVE_FILES=(
            ".env"
            "*.key"
            "*.pem"
            "*.p12"
            "*.pfx"
            "*password*"
            "*secret*"
            "id_rsa"
            "id_dsa"
          )
          
          for pattern in "${SENSITIVE_FILES[@]}"; do
            if find . -name "$pattern" -not -path "./.git/*" | grep -q .; then
              echo "⚠️  Found potentially sensitive files matching: $pattern"
              find . -name "$pattern" -not -path "./.git/*"
            fi
          done
          
          echo "✅ Sensitive file check completed"

      - name: License compliance check
        run: |
          echo "📄 Checking license compliance..."
          pnpm licenses list --long 2>/dev/null || echo "No license check available"

      - name: Dependency tree analysis
        run: |
          echo "🌳 Analyzing dependency tree..."
          pnpm list --depth=0
          
          # Check for known vulnerable packages
          echo "🔍 Checking for known vulnerable patterns..."
          if pnpm list | grep -E "(node-sass|bower|gulp)"; then
            echo "⚠️  Found potentially outdated dependencies"
          fi

  secrets-scan:
    name: Secrets Detection
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified